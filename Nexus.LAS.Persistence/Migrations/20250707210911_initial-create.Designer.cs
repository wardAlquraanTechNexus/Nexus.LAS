// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nexus.LAS.Persistence.DatabaseContext;

#nullable disable

namespace Nexus.LAS.Persistence.Migrations
{
    [DbContext(typeof(NexusLASDbContext))]
    [Migration("20250707210911_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<string>("Capital")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Capital");

                    b.Property<string>("CountryName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CountryName");

                    b.Property<string>("Currency")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Currency");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CurrencyCode");

                    b.Property<string>("FIPS104")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIPS104");

                    b.Property<string>("ISO2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ISO2");

                    b.Property<string>("ISO3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ISO3");

                    b.Property<string>("ISON")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ISON");

                    b.Property<string>("Internet")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Internet");

                    b.Property<string>("MapReference")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MapReference");

                    b.Property<string>("NationalityPlural")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NationalityPlural");

                    b.Property<string>("NationalitySingular")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NationalitySingular");

                    b.Property<string>("Population")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Population");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Title");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlphabeticCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("AlphabeticCode");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Currency");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Entity");

                    b.Property<bool>("IsFundYesNo")
                        .HasColumnType("bit")
                        .HasColumnName("IsFundYesNo");

                    b.Property<string>("MinorUnit")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("MinorUnit");

                    b.Property<string>("NumericCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("NumericCode");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.DynamicList", b =>
                {
                    b.Property<string>("DynamicListIdC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DynamicListIDC");

                    b.Property<int>("DynamicListIdN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DynamicListIDN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DynamicListIdN"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("CreatedByDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedBy_Date");

                    b.Property<int>("CreatedByIdN")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy_IDN");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedBy_Name");

                    b.Property<string>("LinkedCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LinkedCategory");

                    b.Property<int?>("MainListID")
                        .HasColumnType("int")
                        .HasColumnName("MainListID");

                    b.Property<string>("MenuCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MenuCategory");

                    b.Property<string>("MenuValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MenuValue");

                    b.Property<int?>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("Rank");

                    b.Property<DateTime?>("UpdatedByDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedBy_Date");

                    b.Property<int?>("UpdatedByIdN")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy_IDN");

                    b.Property<string>("UpdatedByName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UpdatedBy_Name");

                    b.HasKey("DynamicListIdC", "DynamicListIdN");

                    b.ToTable("DynamicLists");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedByDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedBy_Date");

                    b.Property<int>("CreatedByIdN")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy_IDN");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedBy_Name");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GroupName");

                    b.Property<DateTime?>("UpdatedByDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedBy_Date");

                    b.Property<int?>("UpdatedByIdN")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy_IDN");

                    b.Property<string>("UpdatedByName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UpdatedBy_Name");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.GroupMenu", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID")
                        .HasColumnOrder(0);

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID")
                        .HasColumnOrder(1);

                    b.Property<int?>("Access")
                        .HasColumnType("int")
                        .HasColumnName("Access");

                    b.Property<int?>("Admin")
                        .HasColumnType("int")
                        .HasColumnName("Admin");

                    b.Property<int?>("CanDelete")
                        .HasColumnType("int")
                        .HasColumnName("CanDelete");

                    b.Property<int?>("CanInsert")
                        .HasColumnType("int")
                        .HasColumnName("CanInsert");

                    b.Property<int?>("CanUpdate")
                        .HasColumnType("int")
                        .HasColumnName("CanUpdate");

                    b.HasKey("GroupId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("GroupsMenus");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedByDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedBy_Date");

                    b.Property<int>("CreatedByIdN")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy_IDN");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreatedBy_Name");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Path")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Path");

                    b.Property<int?>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("Rank");

                    b.Property<DateTime?>("UpdatedByDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedBy_Date");

                    b.Property<int?>("UpdatedByIdN")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy_IDN");

                    b.Property<string>("UpdatedByName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UpdatedBy_Name");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.NumberEntities.Number", b =>
                {
                    b.Property<int>("NumberValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumberValue"));

                    b.HasKey("NumberValue");

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("Nexus.LAS.Domain.Entities.Lookup.GroupMenu", b =>
                {
                    b.HasOne("Nexus.LAS.Domain.Entities.Lookup.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.LAS.Domain.Entities.Lookup.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Menu");
                });
#pragma warning restore 612, 618
        }
    }
}
